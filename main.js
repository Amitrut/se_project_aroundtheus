!function(){"use strict";class e{constructor(e,t){this._inputSelector=e.inputSelector,this._formSelector=e.formSelector,this._submitButtonSelector=e.submitButtonSelector,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}resetValidation(){this._toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}disableButton(){this._submitButton.disabled=!0}_toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._submitButton.disabled=!1}_hasInvalidInput(){return!this._inputElements.every((e=>e.validity.valid))}_setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setEventListeners()}}class t{constructor(e,t,s,r,n){this._name=e.name,this._image=e.link,this.id=e._id,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteClick=r,this._handleLikeClick=n,this._cardElement=document.querySelector(t),this.isLiked=e.isLiked}_setEventListeners(){this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this)})),this._likeButton.addEventListener("click",(()=>{this._handleLikeClick(this)})),this._deleteButton.addEventListener("click",(()=>{this._handleDeleteClick(this)}))}generateCard(){return this._element=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._likeButton=this._element.querySelector(".card__heart-button"),this._cardImage=this._element.querySelector(".card__image"),this._cardTitle=this._element.querySelector(".card__title"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._cardImage.src=this._image,this._cardImage.alt=this._name,this._cardTitle.textContent=this._name,this.isLiked&&this._likeButton.classList.add("card__heart-button_clicked"),this._setEventListeners(),this._element}removeCardElement(){this._element.remove(),this._element=null}handleLikeButton(){this._likeButton.classList.toggle("card__heart-button_clicked"),this.isLiked=!this.isLiked}}class s{constructor(e){let{modalSelector:t}=e;this._modalElement=document.querySelector(t),this._closeButton=this._modalElement.querySelector(".modal__close"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._modalElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._modalElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closeModalOverlay=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._modalElement.addEventListener("mousedown",(e=>this._closeModalOverlay(e))),this._closeButton.addEventListener("click",(()=>this.close()))}}class r extends s{constructor(e,t){super({modalSelector:e}),this.modalForm=this._modalElement.querySelector(".modal__form"),this._handleFormSubmit=t,this._inputElements=Array.from(this.modalForm.querySelectorAll(".modal__input")),this._modalSubmitButton=this._modalElement.querySelector(".modal__submit-button"),this._submitButtonText=this._modalSubmitButton.textContent}resetForm(){this.modalForm.reset()}_getInputValues(){const e={};return this._inputElements.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputElements.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this.modalForm.addEventListener("submit",(()=>this._handleFormSubmit(this._getInputValues())))}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._modalSubmitButton.textContent=e?t:this._submitButtonText}}document.querySelector(".cards__list");const n=document.querySelector(".profile__edit-button"),o=document.querySelector(".profile__add-button"),i=(document.querySelector(".profile__name"),document.querySelector(".profile__job"),document.querySelector(".profile__avatar-button")),a=document.querySelector("[name='name'"),l=document.querySelector("[name='job']"),d=new class{constructor(e){let{baseURL:t,headers:s}=e;this._baseURL=t,this._headers=s}_request(e,t){return fetch(e,t).then(this._checkPromise)}_checkPromise(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return this._request(`${this._baseURL}/cards`,{headers:this._headers})}getUserInfo(){return this._request(`${this._baseURL}/users/me`,{headers:this._headers}).then((e=>e))}updateUserInfo(e,t){return this._request(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})})}addNewCard(e,t){return this._request(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})})}deleteCard(e){return this._request(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers})}likeCard(e){return this._request(`${this._baseURL}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then((()=>console.log("Card has been liked")))}dislikeCard(e){return this._request(`${this._baseURL}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then((()=>console.log("Card is not yet liked")))}updateAvatar(e){return this._request(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"82d2a8e2-b05f-46c8-b69b-4e1cb4fdd7c7","Content-Type":"application/json"}});d.getInitialCards().then((e=>{console.log("Initial Cards:",e),e.forEach((e=>{u.appendItem(S(e))}))})).catch(console.error),d.getUserInfo().then((e=>{console.log("User Info:",e),v.setUserInfo({nameInput:e.name,jobInput:e.about}),v.setUserAvatar(e.avatar)})).catch(console.error);const c={};var h;h={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-button",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(h.formSelector)).forEach((t=>{const s=new e(h,t),r=t.getAttribute("name");c[r]=s,s.enableValidation()}));const u=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._renderedItems.forEach((e=>{this._renderer(e)}))}appendItem(e){this._container.append(e)}prependItem(e){this._container.prepend(e)}}({renderer:S},".cards__list"),m=new class extends s{constructor(e){let{modalSelector:t}=e;super({modalSelector:t}),this._modalForm=this._modalElement.querySelector(".modal__form")}setHandleDeleteMethod(e){this._handleDeleteSubmit=e}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleDeleteSubmit()})),super.setEventListeners()}}({modalSelector:"#delete-confirm-modal"});m.setEventListeners();const _=new r("#edit-modal",(function(e){f((function(){return d.updateUserInfo(e.name,e.job).then((t=>{v.setUserInfo({nameInput:e.name,jobInput:e.job})}))}),_)}));_.setEventListeners();const p=new r("#add-card-modal",(function(e){f((function(){return d.addNewCard(e.title,e.url).then((e=>{u.prependItem(S(e)),p.resetForm(),c["add-card-form"].disableButton()}))}),p,"Creating...")}));p.setEventListeners();const E=new r("#edit-avatar-modal",(function(e){f((function(){return d.updateAvatar(e.url).then((e=>{v.setUserAvatar(e.avatar),c["edit-avatar-form"].disableButton()}))}),E)}));E.setEventListeners();const b=new class extends s{constructor(e){super({modalSelector:e}),this._modalImage=this._modalElement.querySelector(".modal__image-preview"),this._modalImageSubtitle=this._modalElement.querySelector(".modal__picture-subtitle")}open(e){this._modalImage.src=e.link,this._modalImage.alt=`Photo of ${e.name}`,this._modalImageSubtitle.textContent=e.name,super.open()}}("#preview-image-modal");b.setEventListeners();const v=new class{constructor(e){let{nameElementSelector:t,jobElementSelector:s,avatarSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(s),this._avatar=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent,avatar:this._avatar.src}}setUserInfo(e){let{nameInput:t,jobInput:s}=e;this._nameElement.textContent=t,this._jobElement.textContent=s}setUserAvatar(e){this._avatar.src=e}}({nameElementSelector:".profile__name",jobElementSelector:".profile__job",avatarSelector:".profile__image"});function S(e){return new t(e,"#card-template",(()=>{b.open(e)}),L,y).generateCard()}function f(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.renderLoading(!0,s),e().then((()=>{t.close()})).catch((e=>{console.error(e)})).finally((()=>{t.renderLoading(!1)}))}function L(e){m.open(),m.setHandleDeleteMethod((()=>{d.deleteCard(e.id).then((()=>{m.close(),e.removeCardElement()})).catch(console.error)}))}function y(e){e.isLiked&&d.dislikeCard(e.id).then((()=>{e.handleLikeButton()})).catch(console.error),e.isLiked||d.likeCard(e.id).then((()=>{e.handleLikeButton()})).catch(console.error)}n.addEventListener("click",(()=>{const e=v.getUserInfo();a.value=e.name,l.value=e.job,_.open(),c["edit-profile-form"].resetValidation()})),o.addEventListener("click",(()=>{p.open()})),i.addEventListener("click",(()=>{E.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,